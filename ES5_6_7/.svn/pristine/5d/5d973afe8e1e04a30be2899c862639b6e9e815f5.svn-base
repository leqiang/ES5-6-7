<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>12_class</title>
</head>
<body>
</body>
<!--
1. 通过class定义类
2. 在类中通过constructor定义构造方法
3. 通过new来创建类的实例
4. 通过extends来实现类的继承
5. 通过super调用父类的构造方法
6. 重写从父类中继承的一般方法
-->
<script type="text/javascript">
  //定义一个人的类
  class Person {
    //构造方法(与构建函数对应)-->用来创建类的实例对象
    constructor(name, age) {
      this.name = name
      this.age = age
    }

    //一般方法
    showInfo () {
      console.log(this.name, this.age)
    }
  }
  console.log(typeof Person)  // function
  //根据类来创建实例对象
  let p = new Person('Tom', 12) //内部调用的是constructor()
  console.log(p) //showInfo在原型上, 并没有对象本身上
  p.showInfo()
  /*Person.showInfo = function () {

  }
  Person.showInfo()*/

  //定义一个Person的子类
  class Student extends Person {
    constructor(name, age, price) {
      super(name, age) //调用父类型的构造方法
      this.price = price
    }
    //方法重写: 当从父类型继承的方法不能满足需要时, 需要重新实现
    showInfo() {
      console.log(this.name, this.age, this.price)
    }
  }
  //创建子类的对象
  const s = new Student('Jack', 20, 12000)
  s.showInfo()



</script>
</html>