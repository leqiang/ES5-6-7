<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>06_箭头函数</title>
</head>
<body>

<button id="btn">测试箭头函数this</button>
<button id="btn2">测试箭头函数this</button>

<!--
* 作用: 定义匿名函数
* 基本语法:
  * 没有参数: () => console.log('xxxx')
  * 一个参数: i => i+2
  * 大于一个参数: (i,j) => i+j
  * 函数体不用大括号: 默认返回结果
  * 函数体如果有多个语句, 需要用{}包围
* 使用场景: 多用来定义回调函数
-->
<script type="text/javascript">

  // 1. 箭头函数
  let fun1 = function (a) {
    return a + 3
  }
  let fun2 = a => a +3
  console.log(fun2(3))

  let fun3 = (a, b) => a + b
  console.log(fun3(3, 4))
  let fun4 = () => {
    console.log('函数执行了')
    console.log('多语句需要用大括号')
  }
  fun4()

  [1,2,3].forEach((item, index) => {
    console.log(item , index)
  })

  // 注意: 函数体内的this使用的是外部的this
  $('#btn').click(() => {
    console.log(this);  //是window, 而不是btn
  })
  $('#btn2').click(function () {
    console.log(this); //是btn
  })

  // 2. rest(可变)参数
  function add(...values) {
    let sum = 0;
    for (value of values) {
      sum += value;
    }
    return sum;
  }
  console.log(add(2, 5, 4));

  // 3. 扩展运算符(...)
  let arr = [1, 3, 5];
  let arr2 = ['a', ...arr, 'c'];
  arr2.push(...arr);
  console.log(arr2);
  
  // 4. 形参的默认值
  function Point(x = 1, y = 2) {
    this.x = x;
    this.y = y;
  }

  let p = new Point(3, 4);
  console.log(p);
  p = new Point();
  console.log(p);

</script>

</body>
</html>